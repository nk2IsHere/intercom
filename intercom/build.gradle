plugins {
	id 'maven-publish'
	id 'com.jfrog.artifactory' version '4.16.0'
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	implementation 'org.springframework.boot:spring-boot-starter-reactor-netty'

	implementation 'io.projectreactor:reactor-core'
	implementation 'io.projectreactor.kotlin:reactor-kotlin-extensions'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
	implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-reactor'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.boot:spring-boot-starter-webflux'
}

noArg {
	annotation("eu.nk2.intercom.boot.NoArg")
}

bootJar.enabled = false
jar.enabled = true

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			groupId = project.group
			version = project.version
			artifactId = project.name

			from components.java
			artifact(sourcesJar)
			artifact(javadocJar)
			artifact("$buildDir/libs/${project.name}-${project.version}.jar")
		}
	}
}

artifactory {
	setContextUrl(project.findProperty("artifactory_context_url"))
	publish {
		repository {
			repoKey = project.findProperty("artifactory_repo_publish")
			username = project.findProperty("artifactory_user")
			password = project.findProperty("artifactory_password")
			maven = true
		}
		defaults {
			publications('mavenJava')
			publishArtifacts = true
			publishPom = true
			publishIvy = false
		}
	}
	resolve {
		repository {
			repoKey = project.findProperty("artifactory_repo_resolve")
			username = project.findProperty("artifactory_user")
			password = project.findProperty("artifactory_password")
			maven = true
		}
	}
}